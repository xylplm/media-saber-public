user msaber;
worker_processes auto;
worker_cpu_affinity auto;


events {
    worker_connections 1024;
}


http {

    # 设置缓存路径和缓存区大小
    proxy_cache_path /tmp levels=1:2 keys_zone=my_cache:10m max_size=100m inactive=60m use_temp_path=off;

    sendfile on;

    keepalive_timeout 3600;

    server {

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        listen ${MS_PORT};
        server_name _; # serve all hostnames
        server_tokens off; # disable header "Server nginx"
        
        # gzip compression
        gzip on;
        gzip_comp_level 6;
        gzip_min_length 1100;
        gzip_buffers 16 8k;
        gzip_proxied any;
        gzip_types
            application/javascript
            application/json
            application/rss+xml
            application/x-javascript
            application/xml
            image/svg+xml
            text/css
            text/javascript
            text/js
            text/plain
            text/xml;

        location / {
            # 主目录
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            root /app/front;
            try_files $uri $uri/ /index.html =404;
            index index.html;
        }

        location /assets {
            # 静态资源
            expires 30d;
            add_header Cache-Control "public";
            root /app/front;
        }

        location /static {
            # 后端静态资源缓存
            proxy_cache my_cache;
            # 缓存响应码为200和302的请求7d
            proxy_cache_valid 200 302 7d;
            # 缓存其他响应码的请求5分钟
            proxy_cache_valid any 5m;
            # 缓存键的生成规则
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

            # 向后端API转发请求
            proxy_pass http://backend_api;
        }



        location /api {
            # 后端API
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_redirect off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }
    }

    upstream backend_api {
        # 后端API的地址和端口
        server 127.0.0.1:22698;
        # 可以添加更多后端服务器作为负载均衡
    }

}